@startuml
'https://plantuml.com/class-diagram
set namespaceSeparator ::
class FSI1::String {
-m_str: char *
-m_length: std::size_t
-- Member Funktionen --
-memZero(): void
-{static}get_string_length(NewStr: char const *): std::size_t
-{static}addiere(NewStr1: String const &, NewStr2: String const &): String
-- Konstruktoren und Destruktoren --
+String()
+String(c: char)
+String(NewStr: char const * const)
+String(NewStr: String const &)
+~String
-- Operatoren --
+operator[](i: int): char const
-- Operatoren = --
+operator=(NewStr: String const &): String &
-- Operatoren + --
+operator+(NewStr: String const &): String const
-- Operatoren += --
+operator+=(NewStr: String const &): String &
-- Methoden --
+«nodiscard» to_lower(): String const
+«nodiscard» to_upper(): String const
+«nodiscard» to_int(): int const
+«nodiscard» length(): std::size_t const
+«nodiscard» c_str(): char *
-- Vergleichende Operatoren --
{friend} operator==(NewStr1: String const &, NewStr2: String const &): bool
{friend} operator!=(NewStr1: String const &, NewStr2: String const &): bool
{friend} operator<(NewStr1: String const &, NewStr2: String const &): bool
{friend} operator>(NewStr1: String const &, NewStr2: String const &): bool
{friend} operator<=(NewStr1: String const &, NewStr2: String const &): bool
{friend} operator>=(NewStr1: String const &, NewStr2: String const &): bool
-- IOStream --
{friend} operator<<(std::ostream & os, String const & NewStr) : std::ostream&
{friend} operator>>(std::istream & is, String & NewStr) : std::istream&
}
}
@enduml